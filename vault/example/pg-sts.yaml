apiVersion: v1
kind: Service
metadata:
  name: postgresql-svc-headless
spec:
  clusterIP: None
  selector:
    app: postgresql-app
  ports:
  - port: 5432
    targetPort: psql
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-svc
spec:
  type: NodePort
  selector:
    app: postgresql-app
  ports:
  - port: 5432
    targetPort: psql
    nodePort: 32543
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: vault-postgres-secret
spec:
  provider: vault
  secretObjects:
  - data:
    - key: password
      objectName: db-password
    - key: username
      objectName: db-username
    secretName: db-secret
    type: Opaque
  parameters:
    vaultAddress: "https://vault.vault.svc.cluster.local:8200"
    roleName: "postgres-role"
    # vaultSkipTLSVerify: "true"
    objects: |
      - objectName: "db-password"
        secretPath: "kubernetes/data/postgres"
        secretKey: "password"
      - objectName: "db-username"
        secretPath: "kubernetes/data/postgres"
        secretKey: "username"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-sts
spec:
  selector:
    matchLabels:
      app: postgresql-app
  serviceName: postgresql-svc-headless
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql-app
    spec:
      serviceAccount: postgres-sa
      containers:
      - name: postgresql
        image: postgres:16.2
        env:
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        resources: {}
        ports:
        - containerPort: 5432
          name: psql
        volumeMounts:
        - name: db
          mountPath: /var/lib/postgresql/data
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "vault-postgres-secret"
  volumeClaimTemplates:
  - metadata:
      name: db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-path
      resources:
        requests:
          storage: 5Gi
