# Setting simple scalable deployment mode
deploymentMode: SimpleScalable

loki:
  image:
    registry: docker.io
    repository: grafana/loki
    tag: 3.4.2

  # Disable multi-tenant support
  auth_enabled: false

  # Common config
  commonConfig:
    replication_factor: 3

  # Ingester config
  ingester:
    chunk_idle_period: 2h
    chunk_target_size: 1536000
    max_chunk_age: 2h
    chunk_encoding: snappy

  # limits config
  limits_config:
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    max_query_parallelism: 12 #  max_concurrent * querier pods
    split_queries_by_interval: 15m
    per_stream_rate_limit: 5MB
    per_stream_rate_limit_burst: 20MB
    ingestion_rate_mb: 20
    ingestion_burst_size_mb: 30
    max_entries_limit_per_query: 100000
    allow_structured_metadata: true

  # querier config
  querier:
    engine:
      max_look_back_period: 300
    max_concurrent: 4

  pattern_ingester:
    enabled: true

  # ruler config
  rulerConfig:
    storage:
      type: local
      local:
        directory: /etc/loki/rules
    alertmanager_url: http://alertmanager.monitoring.svc.cluster.local:9093
    wal:
      dir: /var/loki/loki-wal
    remote_write:
      enabled: true
      clients:
        victoria-metrics:
          name: vm
          url: http://vminsert.monitoring.svc.cluster.local:8480/insert/0/prometheus/

  # S3 backend storage configuration
  storage:
    bucketNames:
      chunks: loki
    type: s3
    s3:
      endpoint: minio.minio.svc.cluster.local:9000
      secretAccessKey: password
      accessKeyId: admin
      s3ForcePathStyle: true
      insecure: true

  # Storage Schema
  schemaConfig:
    configs:
    - from: 2024-04-01
      store: tsdb
      index:
        prefix: loki_index_
        period: 24h
      object_store: s3
      schema: v13
      # Optional querier configuration
  query_range:
    align_queries_with_step: true
    results_cache:
      cache:
        default_validity: 12h
        memcached_client:
          addresses: 'dns+result-cache-memcached.loki.svc.cluster.local:11211'
          timeout: 500ms
  # Structured loki configuration, takes precedence over `loki.config`
  structuredConfig:
    chunk_store_config:
      chunk_cache_config:
        memcached:
          batch_size: 256
          parallelism: 10
        memcached_client:
          addresses: 'dns+chunk-cache-memcached.loki.svc.cluster.local:11211'

# Configuration for the write
write:
  replicas: 3
  persistence:
    # -- Size of persistent disk
    size: 5Gi
    storageClass: longhorn-data
  service:
    annotations:
      prometheus.io/port: '3100'
      prometheus.io/scrape: 'true'

# Configuration for the read
read:
  replicas: 3
  persistence:
    size: 5Gi
    storageClass: longhorn-data
  service:
    annotations:
      # Prometheus scrape config
      prometheus.io/port: '3100'
      prometheus.io/scrape: 'true'

# Configuration for the backend
backend:
  replicas: 2
  persistence:
    size: 5Gi
    storageClass: longhorn-data
  service:
    annotations:
      # Prometheus scrape config
      prometheus.io/port: '3100'
      prometheus.io/scrape: 'true'
  extraVolumeMounts:
  - name: rules-volume
    mountPath: /etc/loki/rules/fake/loki-rules.yaml
    subPath: loki-rules.yaml
  - name: rules-volume
    mountPath: /etc/loki/rules/fake/loki-alert.yaml
    subPath: loki-alert.yaml
  extraVolumes:
  - name: rules-volume
    configMap:
      name: loki-rules
  - name: alert-volume
    configMap:
      name: loki-alert

# Configuration for the gateway
gateway:
  enabled: true
  replicas: 2

# Disable cache config
chunksCache:
  enabled: false
resultsCache:
  enabled: false

# Disable mino installation
minio:
  enabled: false

# Disable self-monitoring
monitoring:
  selfMonitoring:
    enabled: false
    grafanaAgent:
      installOperator: false

# Disable helm-test
test:
  enabled: false

# Disable Loki-canary
lokiCanary:
  enabled: false
